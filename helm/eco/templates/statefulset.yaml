apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "eco.fullname" . }}
  labels:
    app.kubernetes.io/name: {{ include "eco.name" . }}
    helm.sh/chart: {{ include "eco.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "eco.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "eco.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      {{- if hasKey .Values.image "pullSecret" }}
      imagePullSecrets:
        - name: {{ .Values.image.pullSecret }}
      {{- end }}
      {{- if .Values.persistence.enabled }}
      securityContext:
        runAsUser: 1000
        fsGroup: 2000
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: WORLD_SIZE_X
              value: "{{ .Values.settings.worldSizeX }}"
            - name: WORLD_SIZE_Y
              value: "{{ .Values.settings.worldSizeY }}"
            - name: METEOR_IMPACT_DAYS
              value: "{{ .Values.settings.meteorImpactDays }}"
            - name: PUBLICSERVER
              value: "false"
          ports:
            - name: game
              containerPort: 3000
              protocol: UDP
            - name: http
              containerPort: 3001
              protocol: TCP
#          livenessProbe:
#            httpGet:
#              path: /
#              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
        {{- if .Values.persistence.enabled }}
          volumeMounts:
            - name: data
              mountPath: /data
        {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
  {{- if .Values.persistence.enabled }}
  volumeClaimTemplates:
    - metadata:
        name: data
        labels:
          app.kubernetes.io/name: {{ include "eco.name" . }}
          app.kubernetes.io/instance: {{ .Release.Name }}
      spec:
        accessModes: [{{ .Values.persistence.accessMode | quote }}]
        resources:
          requests:
            storage: {{ .Values.persistence.size | quote }}
        {{- if .Values.persistence.storageClass }}
        {{- if (eq "-" .Values.persistence.storageClass) }}
        storageClassName: ""
        {{- else }}
        storageClassName: "{{ .Values.persistence.storageClass }}"
        {{- end }}
        {{- end }}
  {{- end }}